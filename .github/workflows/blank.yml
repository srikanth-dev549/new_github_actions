name: 'Create New GCP Sandbox Proiect!'

on:
  workflow_dispatch:
    inputs:
      PROJECT_NAME:
        required: true 
        type: string 
        description: Project Name
      AD_GROUP_NAME:
        required: true 
        type: string
        description: AD Group to Access Project
      COSTCENTER:
        required: true 
        type: string
        description: Cost Center (all lowercase, dash and underscores; no special characters)
      OWNER:
        required: true 
        type: string
        description: Owner (all lowercase, dash and underscores; no special characters)
      OWNER_EMAIL:
        required: true 
        type: string
        description: Owner Email (all lowercase, dash and underscores; no special characters)
      ITPR:
        required: true 
        type: string
        description: ITPR (all lowercase, dash and underscores; no special characters)
      CONTACT_EMAIL:
        required: true 
        type: string
        description: Contact Email (all lowercase, dash and underscores; no special characters)
      DATACLASS:
        required: true 
        type: string
        description: Dataclassification (all lowercase, dash and underscores; no special characters)

permissions:
  id-token: write 
  contents: write

jobs:
  setup_new_directory:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        

    - name: Install required tools 
      run: |-
        sudo apt-get install -y gettext-base
        sudo apt-get update -y 
        sudo apt-get --yes install openssh-client
    - name: Create BRANCH NAME env variable 
      run: echo "BRANCH_NAME=feature/${{github.event.inputs.PROJECT_NAME}}" >> $GITHUB_ENV
          
    - name: Read BRANCH NAME env variable 
      run: echo "S{{ env.BRANCH_NAME })"
        
    - name: Checkout new or existing branch 
      run: |-
        if [ $(git branch -a | grep "${{ env.BRANCH_NAME }}" | wc -l) -eq 0 ]; then git branch "${{ env.BRANCH_NAME }}"; fi
        git checkout ${{ env.BRANCH_NAME }}
#        git branch -u origin/main
#         git pull remote origin
        
      env:
        GIT AUTHOR EMAIL: "git@github.com"
        GIT_AUTHOR_NAME: "Github Actions"
        GIT COMMITTER NAME: "git@github.com"
        GIT_COMMITTER_EMAIL: "Github Actions"
    - name: Add Subscription Project 
      run: |-
        mkdir -p ${{github.event.inputs.PROJECT_NAME}}
        cp template/* ${{github.event.inputs.PROJECT_NAME}} 
        cd ${{github.event.inputs.PROJECT_NAME}}
        envsubst < main.py > main_subst.py
        
      env:
        PROJECT_NAME: ${{github.event.inputs.PROJECT_NAME}} 
        AD_GROUP_NAME : ${{github.event.inputs.AD_GROUP_NAME}} 
        COSTCENTER: ${{github.event.inputs.COSTCENTER}} 
        OWNER: ${{github.event.inputs.OWNER}} 
        OWNER_EMAIL: ${{github.event.inputs.OWNER_EMAIL}} 
        ITPR: S{{github.event.inputs.ITPR}}
        CONTACT_EMAIL: ${{github.event.inputs.CONTACT_EMAIL}}
        DATACLASS: ${{github.event.inputs.DATACLASS}} 
        APPNAME: ${{github.event.inputs.APPNAME}}

    - name: Add, Commit, and Push Changes
      run: |-
        git config --global user.email ${{env.GIT_COMMITTER_EMAIL}}
        git config --global user.name  ${{env.GIT_COMMITTER_NAME}}
        git add -A
        git commit -m "Added ${{github.event.inputs.PROJECT_NAME}} sandbox project" 
        git push -u origin "${{env.BRANCH_NAME}}" 
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
        GIT_AUTHOR_EMAIL: "git@github.com"
        GIT_AUTHOR_NAME: "Github Actions"
        GIT_COMMITTER_EMAIL: "git@github.com"
        GIT_COMMITTER_NAME: "Github Actions"
