name: Terraform Plan

on:      
  push:
    branches:
      - '**'
      - '!main'
    paths-ignore:
      - README.md
      - .gitignore
      - .github/**
        

permissions:
  id-token: write
  contents: write
      
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
      

  generate-data:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code of public repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
      - name: Authenticating gcloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_NEW }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Run python file to get all the principles and roles in data.json | if data.json is already present it will be updated with any manual changes made to the GCP IAM roles
        run: |
          python3 main_subst.py
          rm -rf main.py main_subst.py
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "Update data.json"
            git push origin main
          fi
#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#       - name: Initialize Terraform
#         run: |
#           cd private_repo
#           terraform init -backend-config="prefix=$PROJECT_ID-statefile"
#       - name: Apply Terraform plan
#         run: |
#           terraform plan -out=tfplan.out
#           git add .
#           git commit -m "Adding terraform plan"
#           git push origin main
